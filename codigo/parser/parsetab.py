
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA5077A6A369D4E63A50A81AC6E88E8C'
    
_lr_action_items = {'RETURN':([51,59,60,61,62,64,65,69,71,94,136,164,168,201,226,235,],[55,-32,-33,55,-37,-36,-34,-31,-35,-117,-123,-38,-115,-116,-43,-46,]),'NOTEQ':([95,96,97,99,100,103,104,105,106,108,115,116,117,119,120,122,123,125,126,127,129,141,142,154,155,157,171,184,186,189,191,192,193,202,203,204,211,212,229,233,237,238,239,241,],[-73,-101,-90,-58,-80,-131,-100,-95,-99,-98,-131,-96,-87,147,-131,-103,-97,-102,-94,-93,-92,-72,-74,-79,-81,-91,-89,-105,-108,-107,-104,-109,-106,-75,-76,-86,-82,-83,-118,-112,-113,-114,-111,-110,]),'CHAR':([8,19,20,21,25,38,42,73,],[-131,-126,30,-125,-131,-131,-125,-131,]),'WHILE':([51,59,60,61,62,64,65,69,71,94,136,164,168,201,226,235,],[57,-32,-33,57,-37,-36,-34,-31,-35,-117,-123,-38,-115,-116,-43,-46,]),'PRINT':([51,59,60,61,62,64,65,69,71,94,136,164,168,201,226,235,],[58,-32,-33,58,-37,-36,-34,-31,-35,-117,-123,-38,-115,-116,-43,-46,]),'NEW':([87,110,],[-39,134,]),'.':([124,],[158,]),'APPEND':([158,],[190,]),'SET':([158,],[183,]),'GET':([158,],[185,]),')':([34,38,41,42,46,53,72,73,74,90,91,93,95,96,97,99,100,102,103,104,105,106,107,108,111,115,116,117,119,120,122,123,125,126,127,128,129,137,141,142,143,145,150,154,155,156,157,160,162,163,164,171,180,181,182,184,186,189,191,192,193,197,202,203,204,205,206,207,208,209,210,211,212,213,214,215,220,222,223,228,229,231,232,233,234,237,238,239,240,241,],[37,-131,47,-19,-21,-131,-20,-131,-22,-23,112,114,-73,-101,-90,-58,-80,-47,-131,-100,-95,-99,-51,-98,135,-131,-96,-87,-131,-131,-103,-97,-102,-94,-93,-131,-92,167,-72,-74,171,-57,-59,-79,-81,-131,-91,-50,-52,196,-38,-89,-131,216,-119,-105,-108,-107,-104,-109,-106,225,-75,-76,-86,-64,-65,-61,-60,-63,-62,-82,-83,-120,-121,-131,233,-53,-54,-122,-118,237,238,-112,239,-113,-114,-111,241,-110,]),'(':([16,27,35,55,56,57,58,66,68,76,78,80,81,82,87,88,98,109,110,118,121,139,140,144,146,147,148,149,151,152,153,156,159,161,164,165,169,170,172,173,174,175,176,177,178,179,182,183,185,187,188,190,194,195,215,218,219,221,236,],[26,-14,38,76,77,78,-131,86,88,-131,-131,98,-49,-48,-39,-131,-88,-131,-131,-131,156,-77,-78,-70,-71,-67,-66,-69,-68,-84,-85,-131,-55,-56,-38,197,98,98,98,98,98,98,98,98,98,98,-48,217,218,219,220,221,98,98,-131,-131,-131,-131,-131,]),'+':([95,96,97,100,103,104,105,106,108,115,116,117,120,122,123,125,126,127,129,154,155,157,171,184,186,189,191,192,193,204,211,212,229,233,237,238,239,241,],[-73,-101,-90,-80,-131,-100,-95,-99,-98,139,-96,-87,-131,-103,-97,-102,-94,-93,-92,-79,-81,-91,-89,-105,-108,-107,-104,-109,-106,-86,-82,-83,-118,-112,-113,-114,-111,-110,]),'*':([96,97,100,103,104,105,106,108,116,117,120,122,123,125,126,127,129,157,171,184,186,189,191,192,193,204,229,233,237,238,239,241,],[-101,-90,-80,-131,-100,-95,-99,-98,-96,-87,152,-103,-97,-102,-94,-93,-92,-91,-89,-105,-108,-107,-104,-109,-106,-86,-118,-112,-113,-114,-111,-110,]),'-':([95,96,97,100,103,104,105,106,108,115,116,117,120,122,123,125,126,127,129,154,155,157,171,184,186,189,191,192,193,204,211,212,229,233,237,238,239,241,],[-73,-101,-90,-80,-131,-100,-95,-99,-98,140,-96,-87,-131,-103,-97,-102,-94,-93,-92,-79,-81,-91,-89,-105,-108,-107,-104,-109,-106,-86,-82,-83,-118,-112,-113,-114,-111,-110,]),',':([46,53,92,95,96,97,99,100,102,103,104,105,106,107,108,115,116,117,119,120,122,123,125,126,127,128,129,141,142,145,150,154,155,157,160,162,171,180,184,186,189,191,192,193,202,203,204,205,206,207,208,209,210,211,212,222,223,229,230,233,237,238,239,241,],[-21,73,113,-73,-101,-90,-58,-80,-47,-131,-100,-95,-99,-51,-98,-131,-96,-87,-131,-131,-103,-97,-102,-94,-93,-131,-92,-72,-74,-57,-59,-79,-81,-91,-50,-52,-89,215,-105,-108,-107,-104,-109,-106,-75,-76,-86,-64,-65,-61,-60,-63,-62,-82,-83,-53,-54,-118,236,-112,-113,-114,-111,-110,]),'/':([96,97,100,103,104,105,106,108,116,117,120,122,123,125,126,127,129,157,171,184,186,189,191,192,193,204,229,233,237,238,239,241,],[-101,-90,-80,-131,-100,-95,-99,-98,-96,-87,153,-103,-97,-102,-94,-93,-92,-91,-89,-105,-108,-107,-104,-109,-106,-86,-118,-112,-113,-114,-111,-110,]),'ID':([5,18,28,29,30,31,32,40,51,58,59,60,61,62,64,65,69,71,76,78,80,81,82,86,87,88,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,117,118,119,120,122,123,125,126,127,128,129,130,136,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,164,168,169,170,171,172,173,174,175,176,177,178,179,182,184,186,189,191,192,193,194,195,201,202,203,204,205,206,207,208,209,210,211,212,215,218,219,221,222,223,226,229,233,235,236,237,238,239,241,],[15,27,-127,-129,-128,-124,-130,46,67,-131,-32,-33,67,-37,-36,-34,-31,-35,-131,-131,103,-49,-48,67,-39,-131,-117,-73,-101,-90,-88,-58,-80,121,-47,124,-100,-95,-99,-51,-98,-131,-131,-131,-96,-87,-131,-131,-131,-103,-97,-102,-94,-93,-131,-92,67,-123,-77,-78,-72,-74,-70,-57,-71,-67,-66,-69,-59,-68,-84,-85,-79,-81,-131,-91,-55,-50,-56,-52,-38,-115,103,103,-89,103,103,103,103,103,103,103,103,-48,-105,-108,-107,-104,-109,-106,103,103,-116,-75,-76,-86,-64,-65,-61,-60,-63,-62,-82,-83,-131,-131,-131,-131,-53,-54,-43,-118,-112,-46,-131,-113,-114,-111,-110,]),'MTHANEQ':([95,96,97,99,100,103,104,105,106,108,115,116,117,119,120,122,123,125,126,127,129,141,142,154,155,157,171,184,186,189,191,192,193,202,203,204,211,212,229,233,237,238,239,241,],[-73,-101,-90,-58,-80,-131,-100,-95,-99,-98,-131,-96,-87,144,-131,-103,-97,-102,-94,-93,-92,-72,-74,-79,-81,-91,-89,-105,-108,-107,-104,-109,-106,-75,-76,-86,-82,-83,-118,-112,-113,-114,-111,-110,]),'LTHANEQ':([95,96,97,99,100,103,104,105,106,108,115,116,117,119,120,122,123,125,126,127,129,141,142,154,155,157,171,184,186,189,191,192,193,202,203,204,211,212,229,233,237,238,239,241,],[-73,-101,-90,-58,-80,-131,-100,-95,-99,-98,-131,-96,-87,146,-131,-103,-97,-102,-94,-93,-92,-72,-74,-79,-81,-91,-89,-105,-108,-107,-104,-109,-106,-75,-76,-86,-82,-83,-118,-112,-113,-114,-111,-110,]),'CALL':([58,76,78,80,81,82,87,88,98,109,110,118,139,140,144,146,147,148,149,151,152,153,156,159,161,164,169,170,172,173,174,175,176,177,178,179,182,194,195,215,218,219,221,236,],[-131,-131,-131,101,-49,-48,-39,-131,-88,-131,-131,-131,-77,-78,-70,-71,-67,-66,-69,-68,-84,-85,-131,-55,-56,-38,101,101,101,101,101,101,101,101,101,101,-48,101,101,-131,-131,-131,-131,-131,]),';':([28,29,30,31,32,33,79,89,95,96,97,99,100,102,103,104,105,106,107,108,112,115,116,117,119,120,122,123,125,126,127,128,129,131,132,133,138,141,142,145,150,154,155,157,160,162,166,167,171,184,186,189,191,192,193,198,200,202,203,204,205,206,207,208,209,210,211,212,216,222,223,224,225,227,229,233,237,238,239,241,],[-127,-129,-128,-124,-130,36,94,-28,-73,-101,-90,-58,-80,-47,-131,-100,-95,-99,-51,-98,136,-131,-96,-87,-131,-131,-103,-97,-102,-94,-93,-131,-92,-40,164,-41,168,-72,-74,-57,-59,-79,-81,-91,-50,-52,-131,201,-89,-105,-108,-107,-104,-109,-106,226,-44,-75,-76,-86,-64,-65,-61,-60,-63,-62,-82,-83,229,-53,-54,235,-42,-45,-118,-112,-113,-114,-111,-110,]),':':([14,15,],[25,-12,]),'=':([67,],[87,]),'<':([95,96,97,99,100,103,104,105,106,108,115,116,117,119,120,122,123,125,126,127,129,141,142,154,155,157,171,184,186,189,191,192,193,202,203,204,211,212,229,233,237,238,239,241,],[-73,-101,-90,-58,-80,-131,-100,-95,-99,-98,-131,-96,-87,149,-131,-103,-97,-102,-94,-93,-92,-72,-74,-79,-81,-91,-89,-105,-108,-107,-104,-109,-106,-75,-76,-86,-82,-83,-118,-112,-113,-114,-111,-110,]),'$end':([1,17,52,89,],[0,-1,-29,-28,]),'PLAY':([51,59,60,61,62,64,65,69,71,94,136,164,168,201,226,235,],[56,-32,-33,56,-37,-36,-34,-31,-35,-117,-123,-38,-115,-116,-43,-46,]),'FOR':([51,59,60,61,62,64,65,69,71,94,136,164,168,201,226,235,],[66,-32,-33,66,-37,-36,-34,-31,-35,-117,-123,-38,-115,-116,-43,-46,]),'NOTA':([77,],[92,]),'ELSE':([89,166,],[-28,199,]),'FUNC':([0,2,3,4,6,10,11,12,13,36,75,89,],[-2,-131,8,-131,-3,8,-6,-4,-3,-11,-13,-28,]),'VAR':([0,2,4,36,37,39,43,47,],[-2,5,5,-11,-30,5,5,5,]),'CTECHAR':([58,76,78,80,81,82,87,88,98,109,110,118,139,140,144,146,147,148,149,151,152,153,156,159,161,164,169,170,172,173,174,175,176,177,178,179,182,194,195,215,218,219,221,236,],[-131,-131,-131,96,-49,-48,-39,-131,-88,-131,-131,-131,-77,-78,-70,-71,-67,-66,-69,-68,-84,-85,-131,-55,-56,-38,96,96,96,96,96,96,96,96,96,96,-48,96,96,-131,-131,-131,-131,-131,]),'EQ':([95,96,97,99,100,103,104,105,106,108,115,116,117,119,120,122,123,125,126,127,129,141,142,154,155,157,171,184,186,189,191,192,193,202,203,204,211,212,229,233,237,238,239,241,],[-73,-101,-90,-58,-80,-131,-100,-95,-99,-98,-131,-96,-87,148,-131,-103,-97,-102,-94,-93,-92,-72,-74,-79,-81,-91,-89,-105,-108,-107,-104,-109,-106,-75,-76,-86,-82,-83,-118,-112,-113,-114,-111,-110,]),'CANCION':([0,2,3,4,6,7,9,10,11,12,13,22,23,24,36,75,89,],[-2,-131,-131,-131,-3,16,-7,-131,-6,-4,-3,-10,-8,-7,-11,-13,-28,]),'IF':([51,59,60,61,62,64,65,69,71,94,136,164,168,201,226,235,],[68,-32,-33,68,-37,-36,-34,-31,-35,-117,-123,-38,-115,-116,-43,-46,]),'AND':([95,96,97,99,100,103,104,105,106,107,108,115,116,117,119,120,122,123,125,126,127,128,129,141,142,145,150,154,155,157,171,184,186,189,191,192,193,202,203,204,205,206,207,208,209,210,211,212,229,233,237,238,239,241,],[-73,-101,-90,-58,-80,-131,-100,-95,-99,-51,-98,-131,-96,-87,-131,-131,-103,-97,-102,-94,-93,159,-92,-72,-74,-57,-59,-79,-81,-91,-89,-105,-108,-107,-104,-109,-106,-75,-76,-86,-64,-65,-61,-60,-63,-62,-82,-83,-118,-112,-113,-114,-111,-110,]),'INT':([8,19,20,21,25,38,42,73,],[-131,-126,28,-125,-131,-131,-125,-131,]),'CTEBOOL':([58,76,78,80,81,82,87,88,98,109,110,118,139,140,144,146,147,148,149,151,152,153,156,159,161,164,169,170,172,173,174,175,176,177,178,179,182,194,195,215,218,219,221,236,],[-131,-131,-131,104,-49,-48,-39,-131,-88,-131,-131,-131,-77,-78,-70,-71,-67,-66,-69,-68,-84,-85,-131,-55,-56,-38,104,104,104,104,104,104,104,104,104,104,-48,104,104,-131,-131,-131,-131,-131,]),'FLOAT':([8,19,20,21,25,38,42,73,],[-131,-126,29,-125,-131,-131,-125,-131,]),'LIST':([8,25,38,73,134,],[19,19,19,19,165,]),'REMOVE':([158,],[187,]),'OR':([95,96,97,99,100,103,104,105,106,107,108,115,116,117,119,120,122,123,125,126,127,128,129,141,142,145,150,154,155,157,171,184,186,189,191,192,193,202,203,204,205,206,207,208,209,210,211,212,229,233,237,238,239,241,],[-73,-101,-90,-58,-80,-131,-100,-95,-99,-51,-98,-131,-96,-87,-131,-131,-103,-97,-102,-94,-93,161,-92,-72,-74,-57,-59,-79,-81,-91,-89,-105,-108,-107,-104,-109,-106,-75,-76,-86,-64,-65,-61,-60,-63,-62,-82,-83,-118,-112,-113,-114,-111,-110,]),'LENGTH':([158,],[188,]),'BOOL':([8,19,20,21,25,38,42,73,],[-131,-126,32,-125,-131,-131,-125,-131,]),'CTEE':([26,58,76,78,80,81,82,87,88,98,109,110,113,118,139,140,144,146,147,148,149,151,152,153,156,159,161,164,169,170,172,173,174,175,176,177,178,179,182,194,195,215,217,218,219,221,236,],[34,-131,-131,-131,108,-49,-48,-39,-131,-88,-131,-131,137,-131,-77,-78,-70,-71,-67,-66,-69,-68,-84,-85,-131,-55,-56,-38,108,108,108,108,108,108,108,108,108,108,-48,108,108,-131,230,-131,-131,-131,-131,]),'NOT':([58,76,78,87,88,98,109,110,118,156,164,215,218,219,221,236,],[81,81,81,-39,81,-88,81,81,81,81,-38,81,81,81,81,81,]),'{':([36,37,39,43,44,45,47,48,49,50,54,114,135,196,199,],[-11,-30,-131,-131,51,-15,-131,-16,-18,-15,51,51,51,51,51,]),'>':([95,96,97,99,100,103,104,105,106,108,115,116,117,119,120,122,123,125,126,127,129,141,142,154,155,157,171,184,186,189,191,192,193,202,203,204,211,212,229,233,237,238,239,241,],[-73,-101,-90,-58,-80,-131,-100,-95,-99,-98,-131,-96,-87,151,-131,-103,-97,-102,-94,-93,-92,-72,-74,-79,-81,-91,-89,-105,-108,-107,-104,-109,-106,-75,-76,-86,-82,-83,-118,-112,-113,-114,-111,-110,]),'}':([51,59,60,61,62,63,64,65,69,70,71,83,84,85,94,136,164,168,201,226,235,],[-131,-32,-33,-131,-37,-24,-36,-34,-31,89,-35,-24,-27,-25,-117,-123,-38,-115,-116,-43,-46,]),'CTEF':([58,76,78,80,81,82,87,88,98,109,110,118,139,140,144,146,147,148,149,151,152,153,156,159,161,164,169,170,172,173,174,175,176,177,178,179,182,194,195,215,218,219,221,236,],[-131,-131,-131,106,-49,-48,-39,-131,-88,-131,-131,-131,-77,-78,-70,-71,-67,-66,-69,-68,-84,-85,-131,-55,-56,-38,106,106,106,106,106,106,106,106,106,106,-48,106,106,-131,-131,-131,-131,-131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'nexp':([80,169,170,172,173,174,175,176,177,194,195,],[99,202,203,205,206,207,208,209,210,99,99,]),'vars':([2,4,39,43,47,],[4,4,43,43,43,]),'neur2_2':([153,],[179,]),'meterfuncion':([27,],[35,]),'getlist':([158,],[186,]),'neurVar':([123,],[157,]),'termino':([80,169,170,172,173,174,175,176,177,178,179,194,195,],[95,95,95,95,95,95,95,95,95,211,212,95,95,]),'neur9_1':([159,],[194,]),'append':([158,],[193,]),'cancion':([7,],[17,]),'neur9_2':([161,],[195,]),'length':([158,],[189,]),'bloque':([44,54,114,135,196,199,],[52,75,138,166,224,227,]),'oplista':([103,],[122,]),'if':([51,61,],[59,59,]),'neurCteCh':([96,],[116,]),'meterparams':([46,],[53,]),'creadirprocglobal':([0,],[2,]),'neur5':([95,],[115,]),'estatuto':([51,61,],[61,61,]),'s':([156,215,],[181,228,]),'removelist':([158,],[192,]),'for':([51,61,],[60,60,]),'neur8':([87,],[110,]),'params':([38,73,],[41,90,]),'asignacion':([51,61,86,130,],[69,69,109,163,]),'factor':([80,169,170,172,173,174,175,176,177,178,179,194,195,],[100,100,100,100,100,100,100,100,100,100,100,100,100,]),'print':([51,61,],[62,62,]),'asiglista':([110,],[133,]),'neur1':([97,],[117,]),'neur7':([171,],[204,]),'neur6':([98,],[118,]),'empty':([2,3,4,8,10,25,38,39,43,47,51,53,58,61,73,76,78,88,103,109,110,115,118,119,120,128,156,166,180,215,218,219,221,236,],[6,9,13,21,24,21,42,45,50,45,63,74,82,83,42,82,82,82,125,82,82,142,82,150,155,162,182,200,214,182,82,82,82,82,]),'funcion':([3,10,],[10,10,]),'expresion':([58,76,78,88,109,110,118,156,215,218,219,221,236,],[79,91,93,111,130,131,143,180,180,231,232,234,240,]),'play':([51,61,],[64,64,]),'neur11_2':([147,],[174,]),'return':([51,61,],[65,65,]),'inlistset':([158,],[184,]),'neur11_1':([148,],[175,]),'neur12':([99,],[119,]),'neur11_3':([151,],[177,]),'neur10':([107,],[128,]),'neur11_5':([144,],[172,]),'neur3_2':([140,],[170,]),'neur3_1':([139,],[169,]),'subexpresion':([80,194,195,],[102,222,223,]),'t':([180,],[213,]),'metercancion':([37,],[39,]),'x':([158,],[191,]),'neurCteE':([108,],[129,]),'neurCteF':([106,],[127,]),'neur11_6':([146,],[173,]),'neurCteB':([104,],[126,]),'d':([10,],[23,]),'a':([2,4,],[3,11,]),'varcte':([80,169,170,172,173,174,175,176,177,178,179,194,195,],[97,97,97,97,97,97,97,97,97,97,97,97,97,]),'c':([3,10,],[7,22,]),'b':([4,],[12,]),'tipo':([8,25,38,73,],[18,33,40,40,]),'g':([43,],[48,]),'f':([39,43,47,],[44,49,54,]),'i':([51,61,],[70,84,]),'h':([53,],[72,]),'callfunc':([80,169,170,172,173,174,175,176,177,178,179,194,195,],[105,105,105,105,105,105,105,105,105,105,105,105,105,]),'j':([61,],[85,]),'m':([58,76,78,88,109,110,118,156,215,218,219,221,236,],[80,80,80,80,80,80,80,80,80,80,80,80,80,]),'l':([166,],[198,]),'o':([128,],[160,]),'n':([120,],[154,]),'q':([115,],[141,]),'p':([119,],[145,]),'while':([51,61,],[71,71,]),'r':([103,],[123,]),'u':([8,25,38,73,],[20,20,20,20,]),'programa':([0,],[1,]),'exp':([80,194,195,],[107,107,107,]),'v':([5,],[14,]),'y':([20,],[31,]),'neur2_1':([152,],[178,]),'neur4':([100,],[120,]),'k':([110,],[132,]),'neur11_4':([149,],[176,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> creadirprocglobal a c cancion','programa',4,'p_programa','patito.py',420),
  ('creadirprocglobal -> <empty>','creadirprocglobal',0,'p_creadirprocglobal','patito.py',428),
  ('a -> empty','a',1,'p_a','patito.py',434),
  ('a -> vars b','a',2,'p_a','patito.py',435),
  ('b -> empty','b',1,'p_b','patito.py',439),
  ('b -> a','b',1,'p_b','patito.py',440),
  ('c -> empty','c',1,'p_c','patito.py',444),
  ('c -> funcion d','c',2,'p_c','patito.py',445),
  ('d -> empty','d',1,'p_d','patito.py',449),
  ('d -> c','d',1,'p_d','patito.py',450),
  ('vars -> VAR v : tipo ;','vars',5,'p_vars','patito.py',454),
  ('v -> ID','v',1,'p_v','patito.py',464),
  ('funcion -> FUNC tipo ID meterfuncion ( params ) f bloque','funcion',9,'p_funcion','patito.py',476),
  ('meterfuncion -> <empty>','meterfuncion',0,'p_meterfuncion','patito.py',482),
  ('f -> empty','f',1,'p_f','patito.py',492),
  ('f -> vars g','f',2,'p_f','patito.py',493),
  ('g -> empty','g',1,'p_g','patito.py',497),
  ('g -> f','g',1,'p_g','patito.py',498),
  ('params -> empty','params',1,'p_params','patito.py',502),
  ('params -> tipo ID meterparams h','params',4,'p_params','patito.py',503),
  ('meterparams -> <empty>','meterparams',0,'p_meterparams','patito.py',507),
  ('h -> empty','h',1,'p_h','patito.py',513),
  ('h -> , params','h',2,'p_h','patito.py',514),
  ('i -> empty','i',1,'p_i','patito.py',518),
  ('i -> estatuto j','i',2,'p_i','patito.py',519),
  ('j -> empty','j',1,'p_j','patito.py',523),
  ('j -> i','j',1,'p_j','patito.py',524),
  ('bloque -> { i }','bloque',3,'p_bloque','patito.py',528),
  ('cancion -> CANCION ( CTEE ) metercancion f bloque','cancion',7,'p_cancion','patito.py',534),
  ('metercancion -> <empty>','metercancion',0,'p_metercancion','patito.py',539),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','patito.py',545),
  ('estatuto -> if','estatuto',1,'p_estatuto','patito.py',546),
  ('estatuto -> for','estatuto',1,'p_estatuto','patito.py',547),
  ('estatuto -> return','estatuto',1,'p_estatuto','patito.py',548),
  ('estatuto -> while','estatuto',1,'p_estatuto','patito.py',549),
  ('estatuto -> play','estatuto',1,'p_estatuto','patito.py',550),
  ('estatuto -> print','estatuto',1,'p_estatuto','patito.py',551),
  ('asignacion -> ID = neur8 k ;','asignacion',5,'p_asignacion','patito.py',555),
  ('neur8 -> <empty>','neur8',0,'p_neur8','patito.py',579),
  ('k -> expresion','k',1,'p_k','patito.py',590),
  ('k -> asiglista','k',1,'p_k','patito.py',591),
  ('asiglista -> NEW LIST ( )','asiglista',4,'p_asiglista','patito.py',595),
  ('if -> IF ( expresion ) bloque l ;','if',7,'p_if','patito.py',599),
  ('l -> empty','l',1,'p_l','patito.py',603),
  ('l -> ELSE bloque','l',2,'p_l','patito.py',604),
  ('for -> FOR ( asignacion expresion asignacion ) bloque ;','for',8,'p_for','patito.py',608),
  ('expresion -> m subexpresion','expresion',2,'p_expresion','patito.py',612),
  ('m -> empty','m',1,'p_m','patito.py',630),
  ('m -> NOT','m',1,'p_m','patito.py',631),
  ('subexpresion -> exp neur10 o','subexpresion',3,'p_subexpresion','patito.py',636),
  ('neur10 -> <empty>','neur10',0,'p_neur10','patito.py',644),
  ('o -> empty','o',1,'p_o','patito.py',664),
  ('o -> AND neur9_1 subexpresion','o',3,'p_o','patito.py',665),
  ('o -> OR neur9_2 subexpresion','o',3,'p_o','patito.py',666),
  ('neur9_1 -> <empty>','neur9_1',0,'p_neur9_1','patito.py',674),
  ('neur9_2 -> <empty>','neur9_2',0,'p_neur9_2','patito.py',679),
  ('exp -> nexp neur12 p','exp',3,'p_exp','patito.py',685),
  ('neur12 -> <empty>','neur12',0,'p_neur12','patito.py',693),
  ('p -> empty','p',1,'p_p','patito.py',713),
  ('p -> EQ neur11_1 nexp','p',3,'p_p','patito.py',714),
  ('p -> NOTEQ neur11_2 nexp','p',3,'p_p','patito.py',715),
  ('p -> > neur11_3 nexp','p',3,'p_p','patito.py',716),
  ('p -> < neur11_4 nexp','p',3,'p_p','patito.py',717),
  ('p -> MTHANEQ neur11_5 nexp','p',3,'p_p','patito.py',718),
  ('p -> LTHANEQ neur11_6 nexp','p',3,'p_p','patito.py',719),
  ('neur11_1 -> <empty>','neur11_1',0,'p_neur11_1','patito.py',727),
  ('neur11_2 -> <empty>','neur11_2',0,'p_neur11_2','patito.py',732),
  ('neur11_3 -> <empty>','neur11_3',0,'p_neur11_3','patito.py',737),
  ('neur11_4 -> <empty>','neur11_4',0,'p_neur11_4','patito.py',742),
  ('neur11_5 -> <empty>','neur11_5',0,'p_neur11_5','patito.py',747),
  ('neur11_6 -> <empty>','neur11_6',0,'p_neur11_6','patito.py',752),
  ('nexp -> termino neur5 q','nexp',3,'p_nexp','patito.py',757),
  ('neur5 -> <empty>','neur5',0,'p_neur5','patito.py',765),
  ('q -> empty','q',1,'p_q','patito.py',786),
  ('q -> + neur3_1 nexp','q',3,'p_q','patito.py',787),
  ('q -> - neur3_2 nexp','q',3,'p_q','patito.py',788),
  ('neur3_1 -> <empty>','neur3_1',0,'p_neur3_1','patito.py',795),
  ('neur3_2 -> <empty>','neur3_2',0,'p_neur3_2','patito.py',800),
  ('termino -> factor neur4 n','termino',3,'p_termino','patito.py',805),
  ('neur4 -> <empty>','neur4',0,'p_neur4','patito.py',813),
  ('n -> empty','n',1,'p_n','patito.py',833),
  ('n -> * neur2_1 termino','n',3,'p_n','patito.py',834),
  ('n -> / neur2_2 termino','n',3,'p_n','patito.py',835),
  ('neur2_1 -> <empty>','neur2_1',0,'p_neur2_1','patito.py',843),
  ('neur2_2 -> <empty>','neur2_2',0,'p_neur2_2','patito.py',848),
  ('factor -> ( neur6 expresion ) neur7','factor',5,'p_factor','patito.py',853),
  ('factor -> varcte neur1','factor',2,'p_factor','patito.py',854),
  ('neur6 -> <empty>','neur6',0,'p_neur6','patito.py',862),
  ('neur7 -> <empty>','neur7',0,'p_neur7','patito.py',871),
  ('neur1 -> <empty>','neur1',0,'p_neur1','patito.py',883),
  ('varcte -> ID r neurVar','varcte',3,'p_varcte','patito.py',888),
  ('varcte -> CTEE neurCteE','varcte',2,'p_varcte','patito.py',889),
  ('varcte -> CTEF neurCteF','varcte',2,'p_varcte','patito.py',890),
  ('varcte -> CTEBOOL neurCteB','varcte',2,'p_varcte','patito.py',891),
  ('varcte -> callfunc','varcte',1,'p_varcte','patito.py',892),
  ('varcte -> CTECHAR neurCteCh','varcte',2,'p_varcte','patito.py',893),
  ('neurVar -> <empty>','neurVar',0,'p_neurVar','patito.py',901),
  ('neurCteE -> <empty>','neurCteE',0,'p_neurCteE','patito.py',915),
  ('neurCteF -> <empty>','neurCteF',0,'p_neurCteF','patito.py',924),
  ('neurCteB -> <empty>','neurCteB',0,'p_neurCteB','patito.py',933),
  ('neurCteCh -> <empty>','neurCteCh',0,'p_neurCteCh','patito.py',942),
  ('r -> empty','r',1,'p_r','patito.py',948),
  ('r -> oplista','r',1,'p_r','patito.py',949),
  ('oplista -> ID . x','oplista',3,'p_oplista','patito.py',957),
  ('x -> inlistset','x',1,'p_x','patito.py',962),
  ('x -> append','x',1,'p_x','patito.py',963),
  ('x -> length','x',1,'p_x','patito.py',964),
  ('x -> getlist','x',1,'p_x','patito.py',965),
  ('x -> removelist','x',1,'p_x','patito.py',966),
  ('inlistset -> SET ( CTEE , expresion )','inlistset',6,'p_inlistset','patito.py',971),
  ('append -> APPEND ( expresion )','append',4,'p_append','patito.py',976),
  ('length -> LENGTH ( )','length',3,'p_length','patito.py',981),
  ('getlist -> GET ( expresion )','getlist',4,'p_getlist','patito.py',986),
  ('removelist -> REMOVE ( expresion )','removelist',4,'p_removelist','patito.py',991),
  ('while -> WHILE ( expresion ) bloque ;','while',6,'p_while','patito.py',996),
  ('play -> PLAY ( NOTA , CTEE ) ;','play',7,'p_play','patito.py',1000),
  ('print -> PRINT expresion ;','print',3,'p_print','patito.py',1009),
  ('callfunc -> CALL ID ( s ) ;','callfunc',6,'p_callfunc','patito.py',1017),
  ('s -> empty','s',1,'p_s','patito.py',1021),
  ('s -> expresion t','s',2,'p_s','patito.py',1022),
  ('t -> empty','t',1,'p_t','patito.py',1026),
  ('t -> , s','t',2,'p_t','patito.py',1027),
  ('return -> RETURN ( expresion ) ;','return',5,'p_return','patito.py',1031),
  ('tipo -> u y','tipo',2,'p_tipo','patito.py',1035),
  ('u -> empty','u',1,'p_u','patito.py',1040),
  ('u -> LIST','u',1,'p_u','patito.py',1041),
  ('y -> INT','y',1,'p_y','patito.py',1045),
  ('y -> CHAR','y',1,'p_y','patito.py',1046),
  ('y -> FLOAT','y',1,'p_y','patito.py',1047),
  ('y -> BOOL','y',1,'p_y','patito.py',1048),
  ('empty -> <empty>','empty',0,'p_empty','patito.py',1060),
]
