
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E6FCDEE57402098D7CCB623B9B38F415'
    
_lr_action_items = {'RETURN':([57,64,65,66,67,68,72,73,77,79,103,154,184,237,243,251,253,255,262,269,270,],[61,-39,-40,-45,61,-44,-43,-41,-38,-42,-133,-143,-46,-132,-131,-140,-56,-129,-51,-61,-57,]),'NOTEQ':([104,105,106,108,109,110,113,114,115,117,125,126,136,138,139,141,142,143,145,158,159,170,171,173,190,201,203,206,208,209,210,220,221,222,223,224,248,258,259,260,264,267,],[-88,-115,-102,131,-109,-95,-151,-114,-113,-112,-151,-110,-151,-117,-111,-116,-108,-107,-106,-87,-89,-94,-96,-105,-104,-119,-122,-121,-118,-123,-120,-90,-91,-101,-97,-98,-126,-127,-128,-125,-134,-124,]),'VOID':([14,],[20,]),'CHAR':([14,17,30,31,32,44,48,81,],[22,-151,-146,38,-145,-151,-145,-151,]),'WHILE':([57,64,65,66,67,68,72,73,77,79,103,154,184,237,243,251,253,255,262,269,270,],[62,-39,-40,-45,62,-44,-43,-41,-38,-42,-133,-143,-46,-132,-131,-140,-56,-129,-51,-61,-57,]),'PRINT':([57,64,65,66,67,68,72,73,77,79,103,154,184,237,243,251,253,255,262,269,270,],[63,-39,-40,-45,63,-44,-43,-41,-38,-42,-133,-143,-46,-132,-131,-140,-56,-129,-51,-61,-57,]),'NEW':([96,121,],[-47,152,]),'.':([140,],[174,]),'APPEND':([174,],[207,]),'SET':([174,],[200,]),'GET':([174,],[202,]),')':([41,44,47,48,52,59,80,81,82,99,101,104,105,106,108,109,110,112,113,114,115,116,117,122,124,125,126,129,134,136,138,139,141,142,143,144,145,146,158,159,160,162,170,171,173,176,178,179,180,181,182,184,190,191,192,193,194,195,196,199,201,203,206,208,209,210,213,217,220,221,222,223,224,225,229,231,232,233,234,235,246,247,248,249,250,252,258,259,260,264,265,267,],[43,-151,53,-26,-28,-151,-27,-151,-29,-30,123,-88,-115,-102,-151,-109,-95,-62,-151,-114,-113,-66,-112,153,155,-151,-110,-73,-74,-151,-117,-111,-116,-108,-107,-151,-106,-151,-87,-89,190,-72,-94,-96,-105,-65,-67,-137,214,-135,215,-46,-104,-79,-80,-76,-75,-78,-77,-151,-119,-122,-121,-118,-123,-120,-151,239,-90,-91,-101,-97,-98,244,248,-68,-69,-151,-136,-138,258,259,-126,260,-139,261,-127,-128,-125,-134,267,-124,]),'(':([19,34,42,61,62,63,71,74,76,84,85,87,88,89,93,96,97,102,107,118,120,121,127,128,130,131,132,133,135,137,146,148,156,157,161,163,164,165,166,167,168,169,172,175,177,181,184,185,188,189,197,198,199,200,202,204,205,207,211,212,227,228,230,233,257,],[33,-20,44,84,85,-151,94,95,97,-151,-130,107,-64,-63,-141,-47,-151,-151,-103,146,-58,-151,-151,-85,-86,-82,-81,-84,-83,-141,-151,-151,-92,-93,107,107,107,107,107,107,-99,-100,199,-70,-71,-63,-46,217,107,107,107,107,-151,226,227,228,229,230,107,107,-151,-151,-151,-151,-151,]),'+':([104,105,106,109,110,113,114,115,117,125,126,136,138,139,141,142,143,145,170,171,173,190,201,203,206,208,209,210,222,223,224,248,258,259,260,264,267,],[-88,-115,-102,-109,-95,-151,-114,-113,-112,156,-110,-151,-117,-111,-116,-108,-107,-106,-94,-96,-105,-104,-119,-122,-121,-118,-123,-120,-101,-97,-98,-126,-127,-128,-125,-134,-124,]),'*':([105,106,109,110,113,114,115,117,126,136,138,139,141,142,143,145,173,190,201,203,206,208,209,210,222,248,258,259,260,264,267,],[-115,-102,-109,-95,-151,-114,-113,-112,-110,168,-117,-111,-116,-108,-107,-106,-105,-104,-119,-122,-121,-118,-123,-120,-101,-126,-127,-128,-125,-134,-124,]),'-':([104,105,106,109,110,113,114,115,117,125,126,136,138,139,141,142,143,145,170,171,173,190,201,203,206,208,209,210,222,223,224,248,258,259,260,264,267,],[-88,-115,-102,-109,-95,-151,-114,-113,-112,157,-110,-151,-117,-111,-116,-108,-107,-106,-94,-96,-105,-104,-119,-122,-121,-118,-123,-120,-101,-97,-98,-126,-127,-128,-125,-134,-124,]),',':([52,59,104,105,106,108,109,110,112,113,114,115,116,117,119,125,126,129,134,136,138,139,141,142,143,144,145,158,159,162,170,171,173,176,178,179,190,191,192,193,194,195,196,201,203,206,208,209,210,213,220,221,222,223,224,231,232,245,248,258,259,260,264,267,],[-28,81,-88,-115,-102,-151,-109,-95,-62,-151,-114,-113,-66,-112,147,-151,-110,-73,-74,-151,-117,-111,-116,-108,-107,-151,-106,-87,-89,-72,-94,-96,-105,-65,-67,-137,-104,-79,-80,-76,-75,-78,-77,-119,-122,-121,-118,-123,-120,233,-90,-91,-101,-97,-98,-68,-69,257,-126,-127,-128,-125,-134,-124,]),'/':([105,106,109,110,113,114,115,117,126,136,138,139,141,142,143,145,173,190,201,203,206,208,209,210,222,248,258,259,260,264,267,],[-115,-102,-109,-95,-151,-114,-113,-112,-110,169,-117,-111,-116,-108,-107,-106,-105,-104,-119,-122,-121,-118,-123,-120,-101,-126,-127,-128,-125,-134,-124,]),'ID':([5,20,21,22,23,24,25,36,37,38,39,40,46,57,63,64,65,66,67,68,69,72,73,77,79,84,85,87,88,89,95,96,97,102,103,107,111,113,120,121,127,128,130,131,132,133,135,146,148,154,156,157,161,163,164,165,166,167,168,169,175,177,181,184,188,189,197,198,199,211,212,216,227,228,230,233,237,238,243,251,253,255,257,262,269,270,],[12,-19,-17,-16,-15,-18,34,-147,-149,-148,-144,-150,52,75,-151,-39,-40,-45,75,-44,93,-43,-41,-38,-42,-151,-130,113,-64,-63,75,-47,-151,-151,-133,-103,137,140,-58,-151,-151,-85,-86,-82,-81,-84,-83,-151,-151,-143,-92,-93,113,113,113,113,113,113,-99,-100,-70,-71,-63,-46,113,113,113,113,-151,113,113,-59,-151,-151,-151,-151,-132,75,-131,-140,-56,-129,-151,-51,-61,-57,]),'MTHANEQ':([104,105,106,108,109,110,113,114,115,117,125,126,136,138,139,141,142,143,145,158,159,170,171,173,190,201,203,206,208,209,210,220,221,222,223,224,248,258,259,260,264,267,],[-88,-115,-102,128,-109,-95,-151,-114,-113,-112,-151,-110,-151,-117,-111,-116,-108,-107,-106,-87,-89,-94,-96,-105,-104,-119,-122,-121,-118,-123,-120,-90,-91,-101,-97,-98,-126,-127,-128,-125,-134,-124,]),'LTHANEQ':([104,105,106,108,109,110,113,114,115,117,125,126,136,138,139,141,142,143,145,158,159,170,171,173,190,201,203,206,208,209,210,220,221,222,223,224,248,258,259,260,264,267,],[-88,-115,-102,130,-109,-95,-151,-114,-113,-112,-151,-110,-151,-117,-111,-116,-108,-107,-106,-87,-89,-94,-96,-105,-104,-119,-122,-121,-118,-123,-120,-90,-91,-101,-97,-98,-126,-127,-128,-125,-134,-124,]),'CALL':([57,63,64,65,66,67,68,72,73,77,79,84,85,87,88,89,96,97,102,103,107,120,121,127,128,130,131,132,133,135,146,148,154,156,157,161,163,164,165,166,167,168,169,175,177,181,184,188,189,197,198,199,211,212,227,228,230,233,237,243,251,253,255,257,262,269,270,],[69,-151,-39,-40,-45,69,-44,-43,-41,-38,-42,-151,-130,111,-64,-63,-47,-151,-151,-133,-103,-58,-151,-151,-85,-86,-82,-81,-84,-83,-151,-151,-143,-92,-93,111,111,111,111,111,111,-99,-100,-70,-71,-63,-46,111,111,111,111,-151,111,111,-151,-151,-151,-151,-132,-131,-140,-56,-129,-151,-51,-61,-57,]),';':([29,36,37,38,39,40,86,98,104,105,106,108,109,110,112,113,114,115,116,117,123,125,126,129,134,136,138,139,141,142,143,144,145,149,150,151,158,159,162,170,171,173,176,178,183,190,191,192,193,194,195,196,201,203,206,208,209,210,214,215,218,219,220,221,222,223,224,231,232,236,239,240,242,244,248,256,258,259,260,263,264,267,268,],[35,-147,-149,-148,-144,-150,103,-35,-88,-115,-102,-151,-109,-95,-62,-151,-114,-113,-66,-112,154,-151,-110,-73,-74,-151,-117,-111,-116,-108,-107,-151,-106,-48,184,-49,-87,-89,-72,-94,-96,-105,-65,-67,216,-104,-79,-80,-76,-75,-78,-77,-119,-122,-121,-118,-123,-120,-142,237,-151,243,-90,-91,-101,-97,-98,-68,-69,251,-50,253,-53,-142,-126,264,-127,-128,-125,-54,-134,-124,269,]),':':([11,12,],[17,-13,]),'=':([75,],[96,]),'<':([104,105,106,108,109,110,113,114,115,117,125,126,136,138,139,141,142,143,145,158,159,170,171,173,190,201,203,206,208,209,210,220,221,222,223,224,248,258,259,260,264,267,],[-88,-115,-102,133,-109,-95,-151,-114,-113,-112,-151,-110,-151,-117,-111,-116,-108,-107,-106,-87,-89,-94,-96,-105,-104,-119,-122,-121,-118,-123,-120,-90,-91,-101,-97,-98,-126,-127,-128,-125,-134,-124,]),'$end':([2,18,58,98,],[0,-1,-36,-35,]),'PLAY':([57,64,65,66,67,68,72,73,77,79,103,154,184,237,243,251,253,255,262,269,270,],[71,-39,-40,-45,71,-44,-43,-41,-38,-42,-133,-143,-46,-132,-131,-140,-56,-129,-51,-61,-57,]),'FOR':([57,64,65,66,67,68,72,73,77,79,103,154,184,237,243,251,253,255,262,269,270,],[74,-39,-40,-45,74,-44,-43,-41,-38,-42,-133,-143,-46,-132,-131,-140,-56,-129,-51,-61,-57,]),'NOTA':([94,],[119,]),'ELSE':([98,218,],[-35,241,]),'FUNC':([0,1,3,4,6,7,8,9,10,16,35,98,100,],[-2,-151,-7,-151,-3,14,-6,-4,-3,14,-12,-35,-14,]),'VAR':([0,1,4,35,43,45,49,53,],[-2,5,5,-12,-37,5,5,5,]),'CTECHAR':([63,84,85,87,88,89,96,97,102,107,120,121,127,128,130,131,132,133,135,146,148,156,157,161,163,164,165,166,167,168,169,175,177,181,184,188,189,197,198,199,211,212,227,228,230,233,257,],[-151,-151,-130,105,-64,-63,-47,-151,-151,-103,-58,-151,-151,-85,-86,-82,-81,-84,-83,-151,-151,-92,-93,105,105,105,105,105,105,-99,-100,-70,-71,-63,-46,105,105,105,105,-151,105,105,-151,-151,-151,-151,-151,]),'EQ':([104,105,106,108,109,110,113,114,115,117,125,126,136,138,139,141,142,143,145,158,159,170,171,173,190,201,203,206,208,209,210,220,221,222,223,224,248,258,259,260,264,267,],[-88,-115,-102,132,-109,-95,-151,-114,-113,-112,-151,-110,-151,-117,-111,-116,-108,-107,-106,-87,-89,-94,-96,-105,-104,-119,-122,-121,-118,-123,-120,-90,-91,-101,-97,-98,-126,-127,-128,-125,-134,-124,]),'CANCION':([0,1,3,4,6,7,8,9,10,13,15,16,26,27,28,35,98,100,],[-2,-151,-7,-151,-3,-151,-6,-4,-3,19,-8,-151,-11,-9,-8,-12,-35,-14,]),'IF':([57,64,65,66,67,68,72,73,77,79,103,154,184,237,243,251,253,255,262,269,270,],[76,-39,-40,-45,76,-44,-43,-41,-38,-42,-133,-143,-46,-132,-131,-140,-56,-129,-51,-61,-57,]),'AND':([104,105,106,108,109,110,113,114,115,116,117,125,126,129,134,136,138,139,141,142,143,144,145,158,159,162,170,171,173,190,191,192,193,194,195,196,201,203,206,208,209,210,220,221,222,223,224,248,258,259,260,264,267,],[-88,-115,-102,-151,-109,-95,-151,-114,-113,-66,-112,-151,-110,-73,-74,-151,-117,-111,-116,-108,-107,175,-106,-87,-89,-72,-94,-96,-105,-104,-79,-80,-76,-75,-78,-77,-119,-122,-121,-118,-123,-120,-90,-91,-101,-97,-98,-126,-127,-128,-125,-134,-124,]),'INT':([14,17,30,31,32,44,48,81,],[23,-151,-146,36,-145,-151,-145,-151,]),'CTEBOOL':([63,84,85,87,88,89,96,97,102,107,120,121,127,128,130,131,132,133,135,146,148,156,157,161,163,164,165,166,167,168,169,175,177,181,184,188,189,197,198,199,211,212,227,228,230,233,257,],[-151,-151,-130,114,-64,-63,-47,-151,-151,-103,-58,-151,-151,-85,-86,-82,-81,-84,-83,-151,-151,-92,-93,114,114,114,114,114,114,-99,-100,-70,-71,-63,-46,114,114,114,114,-151,114,114,-151,-151,-151,-151,-151,]),'FLOAT':([14,17,30,31,32,44,48,81,],[21,-151,-146,37,-145,-151,-145,-151,]),'LIST':([17,44,81,152,],[30,30,30,185,]),'REMOVE':([174,],[204,]),'OR':([104,105,106,108,109,110,113,114,115,116,117,125,126,129,134,136,138,139,141,142,143,144,145,158,159,162,170,171,173,190,191,192,193,194,195,196,201,203,206,208,209,210,220,221,222,223,224,248,258,259,260,264,267,],[-88,-115,-102,-151,-109,-95,-151,-114,-113,-66,-112,-151,-110,-73,-74,-151,-117,-111,-116,-108,-107,177,-106,-87,-89,-72,-94,-96,-105,-104,-79,-80,-76,-75,-78,-77,-119,-122,-121,-118,-123,-120,-90,-91,-101,-97,-98,-126,-127,-128,-125,-134,-124,]),'LENGTH':([174,],[205,]),'BOOL':([14,17,30,31,32,44,48,81,],[24,-151,-146,40,-145,-151,-145,-151,]),'CTEE':([33,63,84,85,87,88,89,96,97,102,107,120,121,127,128,130,131,132,133,135,146,147,148,156,157,161,163,164,165,166,167,168,169,175,177,181,184,188,189,197,198,199,211,212,226,227,228,230,233,257,],[41,-151,-151,-130,117,-64,-63,-47,-151,-151,-103,-58,-151,-151,-85,-86,-82,-81,-84,-83,-151,182,-151,-92,-93,117,117,117,117,117,117,-99,-100,-70,-71,-63,-46,117,117,117,117,-151,117,117,245,-151,-151,-151,-151,-151,]),'NOT':([63,84,85,96,97,102,107,120,121,127,146,148,184,199,227,228,230,233,257,],[88,88,-130,-47,88,88,-103,-58,88,88,88,88,-46,88,88,88,88,88,88,]),'{':([35,43,45,49,50,51,53,54,55,56,60,83,153,155,186,187,241,254,261,266,],[-12,-37,-151,-151,57,-22,-151,-23,-25,-22,-21,57,-52,-52,57,57,-55,57,-60,57,]),'>':([104,105,106,108,109,110,113,114,115,117,125,126,136,138,139,141,142,143,145,158,159,170,171,173,190,201,203,206,208,209,210,220,221,222,223,224,248,258,259,260,264,267,],[-88,-115,-102,135,-109,-95,-151,-114,-113,-112,-151,-110,-151,-117,-111,-116,-108,-107,-106,-87,-89,-94,-96,-105,-104,-119,-122,-121,-118,-123,-120,-90,-91,-101,-97,-98,-126,-127,-128,-125,-134,-124,]),'}':([57,64,65,66,67,68,70,72,73,77,78,79,90,91,92,103,154,184,237,243,251,253,255,262,269,270,],[-151,-39,-40,-45,-151,-44,-31,-43,-41,-38,98,-42,-31,-34,-32,-133,-143,-46,-132,-131,-140,-56,-129,-51,-61,-57,]),'CTEF':([63,84,85,87,88,89,96,97,102,107,120,121,127,128,130,131,132,133,135,146,148,156,157,161,163,164,165,166,167,168,169,175,177,181,184,188,189,197,198,199,211,212,227,228,230,233,257,],[-151,-151,-130,115,-64,-63,-47,-151,-151,-103,-58,-151,-151,-85,-86,-82,-81,-84,-83,-151,-151,-92,-93,115,115,115,115,115,115,-99,-100,-70,-71,-63,-46,115,115,115,115,-151,115,115,-151,-151,-151,-151,-151,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'neur22':([3,],[7,]),'neur23':([60,],[83,]),'neur20':([269,],[270,]),'neur21':([261,],[266,]),'neur26':([214,244,],[236,256,]),'vars':([1,4,45,49,53,],[4,4,49,49,49,]),'neur25':([179,],[213,]),'cancion':([13,],[18,]),'neur24':([93,137,],[118,172,]),'creadirprocglobal':([0,],[1,]),'callvoidfunc':([57,67,],[66,66,]),'neur2_2':([169,],[198,]),'factor':([87,161,163,164,165,166,167,188,189,197,198,211,212,],[110,110,110,110,110,110,110,110,110,110,110,110,110,]),'return':([57,67,],[73,73,]),'neur11_1':([132,],[165,]),'neur11_3':([135,],[167,]),'neur11_2':([131,],[164,]),'neur11_5':([128,],[161,]),'neur11_4':([133,],[166,]),'neur3_1':([156,],[188,]),'neur11_6':([130,],[163,]),'expresion':([63,84,97,102,121,127,146,148,199,227,228,230,233,257,],[86,101,122,124,149,160,179,183,179,246,247,249,179,265,]),'d':([16,],[27,]),'h':([59,],[80,]),'l':([218,],[240,]),'p':([108,],[129,]),'asiglista':([121,],[151,]),'t':([213,],[234,]),'x':([174,],[208,]),'neur4':([110,],[136,]),'getlist':([174,],[203,]),'neur9_1':([175,],[211,]),'neur9_2':([177,],[212,]),'bloque':([50,83,186,187,254,266,],[58,100,218,219,263,268,]),'append':([174,],[210,]),'varcte':([87,161,163,164,165,166,167,188,189,197,198,211,212,],[106,106,106,106,106,106,106,106,106,106,106,106,106,]),'for':([57,67,],[65,65,]),'callreturnfunc':([87,161,163,164,165,166,167,188,189,197,198,211,212,],[109,109,109,109,109,109,109,109,109,109,109,109,109,]),'print':([57,67,],[68,68,]),'neur19':([216,],[238,]),'neur18':([120,],[148,]),'neur13':([153,155,],[186,187,]),'neur12':([129,],[162,]),'neur10':([116,],[144,]),'neur17':([243,],[255,]),'neur16':([85,],[102,]),'neur15':([253,],[262,]),'subexpresion':([87,211,212,],[112,231,232,]),'removelist':([174,],[209,]),'neur14':([241,],[254,]),'c':([7,16,],[13,26,]),'g':([49,],[54,]),'k':([121,],[150,]),'o':([144,],[176,]),'length':([174,],[206,]),'estatuto':([57,67,],[67,67,]),'termino':([87,161,163,164,165,166,167,188,189,197,198,211,212,],[104,104,104,104,104,104,104,104,104,223,224,104,104,]),'nexp':([87,161,163,164,165,166,167,188,189,211,212,],[108,191,192,193,194,195,196,220,221,108,108,]),'params':([44,81,],[47,99,]),'empty':([1,4,7,16,17,44,45,49,53,57,59,63,67,81,84,97,102,108,113,121,125,127,136,144,146,148,199,213,218,227,228,230,233,257,],[6,10,15,28,32,48,51,56,51,70,82,89,90,48,89,89,89,134,141,89,159,89,171,178,181,89,181,235,242,89,89,89,181,89,]),'inlistset':([174,],[201,]),'oplista':([113,],[138,]),'neur2_1':([168,],[197,]),'neurCteE':([117,],[145,]),'neurCteF':([115,],[143,]),'neurCteB':([114,],[142,]),'b':([4,],[9,]),'asignacion':([57,67,95,238,],[77,77,120,252,]),'f':([45,49,53,],[50,55,60,]),'j':([67,],[92,]),'n':([136,],[170,]),'while':([57,67,],[79,79,]),'r':([113,],[139,]),'v':([5,],[11,]),'z':([14,],[25,]),'meterparams':([52,],[59,]),'meterfuncion':([34,],[42,]),'neurVar':([139,],[173,]),'if':([57,67,],[64,64,]),'neurCteCh':([105,],[126,]),'s':([146,199,233,],[180,225,250,]),'neur8':([96,],[121,]),'neur7':([190,],[222,]),'neur6':([107,],[127,]),'neur5':([104,],[125,]),'funcion':([7,16,],[16,16,]),'play':([57,67,],[72,72,]),'neur3_2':([157,],[189,]),'metercancion':([43,],[45,]),'a':([1,4,],[3,8,]),'tipo':([17,44,81,],[29,46,46,]),'i':([57,67,],[78,91,]),'m':([63,84,97,102,121,127,146,148,199,227,228,230,233,257,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'q':([125,],[158,]),'u':([17,44,81,],[31,31,31,]),'programa':([0,],[2,]),'exp':([87,211,212,],[116,116,116,]),'y':([31,],[39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> creadirprocglobal a neur22 c cancion','programa',5,'p_programa','patito.py',586),
  ('creadirprocglobal -> <empty>','creadirprocglobal',0,'p_creadirprocglobal','patito.py',602),
  ('a -> empty','a',1,'p_a','patito.py',608),
  ('a -> vars b','a',2,'p_a','patito.py',609),
  ('b -> empty','b',1,'p_b','patito.py',613),
  ('b -> a','b',1,'p_b','patito.py',614),
  ('neur22 -> <empty>','neur22',0,'p_neur22','patito.py',622),
  ('c -> empty','c',1,'p_c','patito.py',632),
  ('c -> funcion d','c',2,'p_c','patito.py',633),
  ('d -> empty','d',1,'p_d','patito.py',637),
  ('d -> c','d',1,'p_d','patito.py',638),
  ('vars -> VAR v : tipo ;','vars',5,'p_vars','patito.py',646),
  ('v -> ID','v',1,'p_v','patito.py',739),
  ('funcion -> FUNC z ID meterfuncion ( params ) f neur23 bloque','funcion',10,'p_funcion','patito.py',755),
  ('z -> INT','z',1,'p_z','patito.py',770),
  ('z -> CHAR','z',1,'p_z','patito.py',771),
  ('z -> FLOAT','z',1,'p_z','patito.py',772),
  ('z -> BOOL','z',1,'p_z','patito.py',773),
  ('z -> VOID','z',1,'p_z','patito.py',774),
  ('meterfuncion -> <empty>','meterfuncion',0,'p_meterfuncion','patito.py',792),
  ('neur23 -> <empty>','neur23',0,'p_neur23','patito.py',807),
  ('f -> empty','f',1,'p_f','patito.py',814),
  ('f -> vars g','f',2,'p_f','patito.py',815),
  ('g -> empty','g',1,'p_g','patito.py',819),
  ('g -> f','g',1,'p_g','patito.py',820),
  ('params -> empty','params',1,'p_params','patito.py',828),
  ('params -> tipo ID meterparams h','params',4,'p_params','patito.py',829),
  ('meterparams -> <empty>','meterparams',0,'p_meterparams','patito.py',837),
  ('h -> empty','h',1,'p_h','patito.py',892),
  ('h -> , params','h',2,'p_h','patito.py',893),
  ('i -> empty','i',1,'p_i','patito.py',897),
  ('i -> estatuto j','i',2,'p_i','patito.py',898),
  ('j -> empty','j',1,'p_j','patito.py',902),
  ('j -> i','j',1,'p_j','patito.py',903),
  ('bloque -> { i }','bloque',3,'p_bloque','patito.py',911),
  ('cancion -> CANCION ( CTEE ) metercancion f bloque','cancion',7,'p_cancion','patito.py',921),
  ('metercancion -> <empty>','metercancion',0,'p_metercancion','patito.py',930),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','patito.py',943),
  ('estatuto -> if','estatuto',1,'p_estatuto','patito.py',944),
  ('estatuto -> for','estatuto',1,'p_estatuto','patito.py',945),
  ('estatuto -> return','estatuto',1,'p_estatuto','patito.py',946),
  ('estatuto -> while','estatuto',1,'p_estatuto','patito.py',947),
  ('estatuto -> play','estatuto',1,'p_estatuto','patito.py',948),
  ('estatuto -> print','estatuto',1,'p_estatuto','patito.py',949),
  ('estatuto -> callvoidfunc','estatuto',1,'p_estatuto','patito.py',950),
  ('asignacion -> ID = neur8 k ;','asignacion',5,'p_asignacion','patito.py',958),
  ('neur8 -> <empty>','neur8',0,'p_neur8','patito.py',988),
  ('k -> expresion','k',1,'p_k','patito.py',1000),
  ('k -> asiglista','k',1,'p_k','patito.py',1001),
  ('asiglista -> NEW LIST ( )','asiglista',4,'p_asiglista','patito.py',1009),
  ('if -> IF ( expresion ) neur13 bloque l ; neur15','if',9,'p_if','patito.py',1017),
  ('neur13 -> <empty>','neur13',0,'p_neur13','patito.py',1025),
  ('l -> empty','l',1,'p_l','patito.py',1040),
  ('l -> ELSE neur14 bloque','l',3,'p_l','patito.py',1041),
  ('neur14 -> <empty>','neur14',0,'p_neur14','patito.py',1049),
  ('neur15 -> <empty>','neur15',0,'p_neur15','patito.py',1064),
  ('for -> FOR ( asignacion neur18 expresion ; neur19 asignacion ) neur21 bloque ; neur20','for',13,'p_for','patito.py',1075),
  ('neur18 -> <empty>','neur18',0,'p_neur18','patito.py',1083),
  ('neur19 -> <empty>','neur19',0,'p_neur19','patito.py',1093),
  ('neur21 -> <empty>','neur21',0,'p_neur21','patito.py',1118),
  ('neur20 -> <empty>','neur20',0,'p_neur20','patito.py',1133),
  ('expresion -> m subexpresion','expresion',2,'p_expresion','patito.py',1149),
  ('m -> empty','m',1,'p_m','patito.py',1216),
  ('m -> NOT','m',1,'p_m','patito.py',1217),
  ('subexpresion -> exp neur10 o','subexpresion',3,'p_subexpresion','patito.py',1227),
  ('neur10 -> <empty>','neur10',0,'p_neur10','patito.py',1235),
  ('o -> empty','o',1,'p_o','patito.py',1309),
  ('o -> AND neur9_1 subexpresion','o',3,'p_o','patito.py',1310),
  ('o -> OR neur9_2 subexpresion','o',3,'p_o','patito.py',1311),
  ('neur9_1 -> <empty>','neur9_1',0,'p_neur9_1','patito.py',1319),
  ('neur9_2 -> <empty>','neur9_2',0,'p_neur9_2','patito.py',1324),
  ('exp -> nexp p neur12','exp',3,'p_exp','patito.py',1334),
  ('neur12 -> <empty>','neur12',0,'p_neur12','patito.py',1342),
  ('p -> empty','p',1,'p_p','patito.py',1416),
  ('p -> EQ neur11_1 nexp','p',3,'p_p','patito.py',1417),
  ('p -> NOTEQ neur11_2 nexp','p',3,'p_p','patito.py',1418),
  ('p -> > neur11_3 nexp','p',3,'p_p','patito.py',1419),
  ('p -> < neur11_4 nexp','p',3,'p_p','patito.py',1420),
  ('p -> MTHANEQ neur11_5 nexp','p',3,'p_p','patito.py',1421),
  ('p -> LTHANEQ neur11_6 nexp','p',3,'p_p','patito.py',1422),
  ('neur11_1 -> <empty>','neur11_1',0,'p_neur11_1','patito.py',1430),
  ('neur11_2 -> <empty>','neur11_2',0,'p_neur11_2','patito.py',1435),
  ('neur11_3 -> <empty>','neur11_3',0,'p_neur11_3','patito.py',1440),
  ('neur11_4 -> <empty>','neur11_4',0,'p_neur11_4','patito.py',1445),
  ('neur11_5 -> <empty>','neur11_5',0,'p_neur11_5','patito.py',1450),
  ('neur11_6 -> <empty>','neur11_6',0,'p_neur11_6','patito.py',1455),
  ('nexp -> termino neur5 q','nexp',3,'p_nexp','patito.py',1464),
  ('neur5 -> <empty>','neur5',0,'p_neur5','patito.py',1472),
  ('q -> empty','q',1,'p_q','patito.py',1547),
  ('q -> + neur3_1 nexp','q',3,'p_q','patito.py',1548),
  ('q -> - neur3_2 nexp','q',3,'p_q','patito.py',1549),
  ('neur3_1 -> <empty>','neur3_1',0,'p_neur3_1','patito.py',1556),
  ('neur3_2 -> <empty>','neur3_2',0,'p_neur3_2','patito.py',1561),
  ('termino -> factor neur4 n','termino',3,'p_termino','patito.py',1570),
  ('neur4 -> <empty>','neur4',0,'p_neur4','patito.py',1578),
  ('n -> empty','n',1,'p_n','patito.py',1653),
  ('n -> * neur2_1 termino','n',3,'p_n','patito.py',1654),
  ('n -> / neur2_2 termino','n',3,'p_n','patito.py',1655),
  ('neur2_1 -> <empty>','neur2_1',0,'p_neur2_1','patito.py',1663),
  ('neur2_2 -> <empty>','neur2_2',0,'p_neur2_2','patito.py',1668),
  ('factor -> ( neur6 expresion ) neur7','factor',5,'p_factor','patito.py',1677),
  ('factor -> varcte','factor',1,'p_factor','patito.py',1678),
  ('neur6 -> <empty>','neur6',0,'p_neur6','patito.py',1686),
  ('neur7 -> <empty>','neur7',0,'p_neur7','patito.py',1695),
  ('varcte -> ID r neurVar','varcte',3,'p_varcte','patito.py',1717),
  ('varcte -> CTEE neurCteE','varcte',2,'p_varcte','patito.py',1718),
  ('varcte -> CTEF neurCteF','varcte',2,'p_varcte','patito.py',1719),
  ('varcte -> CTEBOOL neurCteB','varcte',2,'p_varcte','patito.py',1720),
  ('varcte -> callreturnfunc','varcte',1,'p_varcte','patito.py',1721),
  ('varcte -> CTECHAR neurCteCh','varcte',2,'p_varcte','patito.py',1722),
  ('neurVar -> <empty>','neurVar',0,'p_neurVar','patito.py',1732),
  ('neurCteE -> <empty>','neurCteE',0,'p_neurCteE','patito.py',1752),
  ('neurCteF -> <empty>','neurCteF',0,'p_neurCteF','patito.py',1774),
  ('neurCteB -> <empty>','neurCteB',0,'p_neurCteB','patito.py',1796),
  ('neurCteCh -> <empty>','neurCteCh',0,'p_neurCteCh','patito.py',1818),
  ('r -> empty','r',1,'p_r','patito.py',1833),
  ('r -> oplista','r',1,'p_r','patito.py',1834),
  ('oplista -> ID . x','oplista',3,'p_oplista','patito.py',1846),
  ('x -> inlistset','x',1,'p_x','patito.py',1851),
  ('x -> append','x',1,'p_x','patito.py',1852),
  ('x -> length','x',1,'p_x','patito.py',1853),
  ('x -> getlist','x',1,'p_x','patito.py',1854),
  ('x -> removelist','x',1,'p_x','patito.py',1855),
  ('inlistset -> SET ( CTEE , expresion )','inlistset',6,'p_inlistset','patito.py',1864),
  ('append -> APPEND ( expresion )','append',4,'p_append','patito.py',1873),
  ('length -> LENGTH ( )','length',3,'p_length','patito.py',1882),
  ('getlist -> GET ( expresion )','getlist',4,'p_getlist','patito.py',1891),
  ('removelist -> REMOVE ( expresion )','removelist',4,'p_removelist','patito.py',1900),
  ('while -> WHILE ( neur16 expresion ) neur13 bloque ; neur17','while',9,'p_while','patito.py',1909),
  ('neur16 -> <empty>','neur16',0,'p_neur16','patito.py',1917),
  ('neur17 -> <empty>','neur17',0,'p_neur17','patito.py',1927),
  ('play -> PLAY ( NOTA , CTEE ) ;','play',7,'p_play','patito.py',1942),
  ('print -> PRINT expresion ;','print',3,'p_print','patito.py',1956),
  ('callreturnfunc -> CALL ID neur24 ( s ) neur26 ;','callreturnfunc',8,'p_callreturnfunc','patito.py',1969),
  ('s -> empty','s',1,'p_s','patito.py',1976),
  ('s -> expresion neur25 t','s',3,'p_s','patito.py',1977),
  ('neur25 -> <empty>','neur25',0,'p_neur25','patito.py',1985),
  ('t -> empty','t',1,'p_t','patito.py',2012),
  ('t -> , s','t',2,'p_t','patito.py',2013),
  ('callvoidfunc -> CALL ID neur24 ( s ) neur26 ;','callvoidfunc',8,'p_callvoidfunc','patito.py',2021),
  ('neur24 -> <empty>','neur24',0,'p_neur24','patito.py',2029),
  ('neur26 -> <empty>','neur26',0,'p_neur26','patito.py',2051),
  ('return -> RETURN ( expresion ) ;','return',5,'p_return','patito.py',2074),
  ('tipo -> u y','tipo',2,'p_tipo','patito.py',2092),
  ('u -> empty','u',1,'p_u','patito.py',2097),
  ('u -> LIST','u',1,'p_u','patito.py',2098),
  ('y -> INT','y',1,'p_y','patito.py',2102),
  ('y -> CHAR','y',1,'p_y','patito.py',2103),
  ('y -> FLOAT','y',1,'p_y','patito.py',2104),
  ('y -> BOOL','y',1,'p_y','patito.py',2105),
  ('empty -> <empty>','empty',0,'p_empty','patito.py',2117),
]
